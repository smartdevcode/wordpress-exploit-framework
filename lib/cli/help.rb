module Cli
  # Methods for handling commands that provide the user with help info.
  module Help
    def show_options(advanced = false)
      opts = module_options(advanced)
      data = empty_option_table_data

      opts.each do |opt|
        data.push(option_table_row(opt))
      end

      print_table(data)
    end

    def show(target)
      if target.eql?('options')
        show_options
      elsif target.eql?('advanced_options')
        show_options(true)
      else
        print_bad("\"#{target}\" is not a valid argument")
      end
    end

    private

    def module_options(advanced)
      if context
        context.module.options.select { |o| o.advanced? == advanced }
      else
        []
      end
    end

    def empty_option_table_data
      [{
        name: 'Name',
        value: 'Current Setting',
        req: 'Required',
        desc: 'Description'
      }]
    end

    def option_table_row(opt)
      {
        name: opt.name,
        value: context.module.normalized_option_value(opt.name),
        req: opt.required?,
        desc: opt.desc
      }
    end
  end
end
